[{"/home/hieu/Desktop/Hieu/Python/other_git/RoadNetDemo/client/src/index.js":"1","/home/hieu/Desktop/Hieu/Python/other_git/RoadNetDemo/client/src/App.js":"2","/home/hieu/Desktop/Hieu/Python/other_git/RoadNetDemo/client/src/reportWebVitals.js":"3","/home/hieu/Desktop/Hieu/Python/other_git/RoadNetDemo/client/src/map_view/Map.js":"4","/home/hieu/Desktop/Hieu/Python/other_git/RoadNetDemo/client/src/config.js":"5","/home/hieu/Desktop/Hieu/Python/other_git/RoadNetDemo/client/src/map_view/countries.js":"6"},{"size":500,"mtime":1609592278658,"results":"7","hashOfConfig":"8"},{"size":201,"mtime":1609596911924,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1609592278658,"results":"10","hashOfConfig":"8"},{"size":8000,"mtime":1609610787207,"results":"11","hashOfConfig":"8"},{"size":220,"mtime":1609606880735,"results":"12","hashOfConfig":"8"},{"size":26768,"mtime":1609609829187,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1ampg3t",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/hieu/Desktop/Hieu/Python/other_git/RoadNetDemo/client/src/index.js",[],["29","30"],"/home/hieu/Desktop/Hieu/Python/other_git/RoadNetDemo/client/src/App.js",["31"],"import logo from './logo.svg';\nimport './App.css';\nimport MapView from './map_view/Map'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <MapView/>\n    </div>\n  );\n}\n\nexport default App;\n","/home/hieu/Desktop/Hieu/Python/other_git/RoadNetDemo/client/src/reportWebVitals.js",[],"/home/hieu/Desktop/Hieu/Python/other_git/RoadNetDemo/client/src/map_view/Map.js",["32","33","34","35"],"import React, {Component, useRef} from \"react\"\n\n/* All local dependencies */\nimport config from \"../config\"\nimport countries from './countries'\n\n/* Bootstrap + CSS */\nimport \"./css/main.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n/* Import all OpenLayer dependencies */\nimport \"ol/ol.css\"\nimport BingMaps from \"ol/source/BingMaps\"\nimport Map from \"ol/Map\"\nimport TileLayer from \"ol/layer/Tile\"\nimport View from \"ol/View\"\nimport {fromLonLat, toLonLat} from \"ol/proj\"\n\nclass MapView extends Component {\n\tconstructor(props){\n\t\t// inside props we store \n\t\t// - _styles : map styles for display\n\t\t// - _layers : layers for each style\n\t\t// - _view   : the view for each layer\n\t\t// - map     : the canvas to draw the map\n\t\tsuper(props)\n\t\tthis.countries = countries\n\n\t\t// define the states, store the following info :\n\t\t// - _long : the current center longtitude of the map\n\t\t// - _lat  : the current center latitude of the map\n\t\tthis.state = {\n\t\t\t_long : config['default_long'],\n\t\t\t_lat  : config['default_lat'],\n\t\t\t_search_long : config['default_long'],\n\t\t\t_search_lat : config['default_lat']\n\t\t}\n\n\t\tthis.render = this.render.bind(this)\n\t\tthis.componentDidMount = this.componentDidMount.bind(this)\n\n\t\t/* Event handlers */\n\t\tthis.onChange = this.onChange.bind(this)\n\t\tthis.onCountryChange = this.onCountryChange.bind(this)\n\t\tthis.onCoordChange = this.onCoordChange.bind(this)\n\t\tthis.onSearchCoords = this.onSearchCoords.bind(this)\n\t\tthis.onLongLatChange = this.onLongLatChange.bind(this)\n\t\tthis.onDefaultCoords = this.onDefaultCoords.bind(this)\n\n\t\t/* Util functions */\n\t\tthis.exportToImage = this.exportToImage.bind(this)\n\t\tthis.getImageURL = this.getImageURL.bind(this)\n\t}\n\n\tcomponentDidMount(){\n\t\t// Config all layers of OpenLayer\n\t\tthis._styles = [\n\t\t  'Aerial',\n\t\t  'AerialWithLabelsOnDemand',\n\t\t  'RoadOnDemand',\n\t\t  'CanvasDark',\n\t\t];\n\t\t\n\t\tthis._layers = [];\n\t\tvar _i, _ii;\n\t\tfor (_i = 0, _ii = this._styles.length; _i < _ii; ++_i) {\n\t\t  this._layers.push(\n\t\t\tnew TileLayer({\n\t\t\t  visible: false,\n\t\t\t  preload: Infinity,\n\t\t\t  source: new BingMaps({\n\t\t\t\tkey: config['bing_map_api_key'],\n\t\t\t\timagerySet: this._styles[_i],\n\t\t\t\t// use maxZoom 19 to see stretched tiles instead of the BingMaps\n\t\t\t\t// \"no photos at this zoom level\" tiles\n\t\t\t\t// maxZoom: 19\n\t\t\t  }),\n\t\t\t})\n\t\t  );\n\t\t}\n\n\t\t// long-lat coordinates\n\t\tvar washingtonLonLat = [this.state._long, this.state._lat] // Singapore default coordinate\n\t\tvar washingtonWebMercator = fromLonLat(washingtonLonLat);\n\n\t\tthis._view = new View({\n\t\t\tprojection : config['map_projection_system'],\n\t\t\tcenter : washingtonWebMercator,\n\t\t\tzoom : 13\n\t\t})\n\n\t\t// Make _long & _lat update on change \n\t\tthis._view.on('change:center', this.onCoordChange);\n\n\t\tthis.map = new Map({\n\t\t\tlayers : this._layers,\n\t\t\ttarget : 'map',\n\t\t\tview : this._view\n\t\t})\n\n\t\t// Make AerialWithLabelsOnDemand visible by default\n\t\tthis._layers[1].setVisible(true)\n\t}\n\n\n\t/* --Event handlers-- */\n\tonCoordChange() {\n\t\t//var current_coord = [this._view.center[0], this._view.center[1]]\n\t\tvar current_long_lat = toLonLat(this._view.getCenter())\n\n\t\t// console.log(this._view.center)\n\t\tthis.setState({_long : current_long_lat[0].toFixed(4)})\n\t\tthis.setState({_lat  : current_long_lat[1].toFixed(4)})\n\t}\n\n\tonChange(e) {\n\t\tvar style = e.target.value;\n\t\tfor (var i = 0, ii = this._layers.length; i < ii; ++i) {\n\t\t\tthis._layers[i].setVisible(this._styles[i] === style);\n\t\t}\n\t}\n\n\tonCountryChange(e){\n\t\tvar country_id = e.target.value\n\t\tvar country_lon = this.countries[country_id].longitude\n\t\tvar country_lat = this.countries[country_id].latitude\n\n\t\tthis.setState({_search_long : country_lon})\n\t\tthis.setState({_search_lat : country_lat})\n\t}\n\n\tonSearchCoords(e) {\n\t\t var _search_long = this.state._search_long\n\t\t var _search_lat  = this.state._search_lat\n\n\t\t var center_lonlat = [_search_long, _search_lat]\n\t\t var coords = fromLonLat(center_lonlat)\n\n\t\t this._view.setCenter(coords)\n\t}\n\n\tonDefaultCoords() {\n\t\tvar center_lonlat = [config['default_long'], config['default_lat']]\n\t\tvar coords = fromLonLat(center_lonlat)\n\n\t\tthis._view.setCenter(coords)\n\t}\n\n\tonLongLatChange(e) {\n\t\tthis.setState({[e.target.name] : e.target.value})\n\t}\n\n\n\t/* --Util functions-- */\n\texportToImage() {\n\t\tthis.map.once('rendercomplete', this.getImageURL)\n\t  \tthis.map.renderSync();\n\t}\n\n\tgetImageURL() {\n\t\tvar mapCanvas = document.createElement('canvas');\n\t    var size = this.map.getSize();\n\t    mapCanvas.width = size[0];\n\t    mapCanvas.height = size[1];\n\t    var mapContext = mapCanvas.getContext('2d');\n\t    Array.prototype.forEach.call(\n\t      document.querySelectorAll('.ol-layer canvas'),\n\t      function (canvas) {\n\t        if (canvas.width > 0) {\n\t          var opacity = canvas.parentNode.style.opacity;\n\t          mapContext.globalAlpha = opacity === '' ? 1 : Number(opacity);\n\t          var transform = canvas.style.transform;\n\t          // Get the transform parameters from the style's transform matrix\n\t          var matrix = transform\n\t            .match(/^matrix\\(([^\\(]*)\\)$/)[1]\n\t            .split(',')\n\t            .map(Number);\n\t          // Apply the transform to the export map context\n\t          CanvasRenderingContext2D.prototype.setTransform.apply(\n\t            mapContext,\n\t            matrix\n\t          );\n\t          mapContext.drawImage(canvas, 0, 0);\n\t        }\n\t      }\n\t    );\n\t    if (navigator.msSaveBlob) {\n\t      // link download attribuute does not work on MS browsers\n\t      navigator.msSaveBlob(mapCanvas.msToBlob(), 'map.png');\n\t    } else {\n\t      var link = document.getElementById('image-download');\n\t      link.href = mapCanvas.toDataURL();\n\t      link.click();\n\t    }\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<script src=\"https://unpkg.com/elm-pep\"></script>\n\t\t\t\t<div id=\"map\" className=\"map\"></div>\n\n\t\t\t\t<div id=\"utils\">\n\t\t\t\t\t<label for=\"layer-select\">Map Styles</label>\n\t\t\t\t\t<select id=\"layer-select\" onChange={this.onChange} className=\"form-control\">\n\t\t\t\t\t\t<option value=\"Aerial\">Aerial</option>\n\t\t\t\t\t\t<option value=\"AerialWithLabelsOnDemand\" selected>Aerial with labels</option>\n\t\t\t\t\t\t<option value=\"RoadOnDemand\">Road</option>\n\t\t\t\t\t\t<option value=\"CanvasDark\">Road dark</option>\n\t\t\t\t\t</select>\n\n\t\t\t\t\t<div id='coords-info'>\n\t\t\t\t\t\t<h3 className=\"seg-header\">Coordinates info</h3><br/><br/><br/>\n\t\t\t\t\t\t<label for=\"center-lattitude\">Map Lattitude</label>\n\t\t\t\t\t\t<input enabled={false} id='center-lattitude' value={this.state._lat} className='form-control'/>\n\t\t\t\t\t\t<label for=\"center-longtitude\">Map longtitude</label>\n\t\t\t\t\t\t<input enabled={false} id='center-longtitude' value={this.state._long} className='form-control'/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div id='coords-utils'>\n\t\t\t\t\t\t<h3 className=\"seg-header\">Search By Coordinates</h3><br/><br/>\n\n\t\t\t\t\t\t<label for=\"countries-select\">Countries</label><br/>\n\t\t\t\t\t\t<select onChange={this.onCountryChange} id=\"countries-select\" className='form-control'>\n\t\t\t\t\t\t{this.countries.map((item, index) => {\n\t\t\t\t\t\t\tif(item.country === 'SG'){\n\t\t\t\t\t\t\t\treturn (<option selected value={index}>{item.name}</option>)\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\treturn (<option value={index}>{item.name}</option>)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})}\n\t\t\t\t\t\t</select>\n\n\t\t\t\t\t\t<label for=\"search-center-lattitude\">Lattitude</label>\n\t\t\t\t\t\t<input onChange={this.onLongLatChange} value={this.state._search_lat} name='_search_lat' id='search-center-lattitude' className='form-control'/>\n\n\t\t\t\t\t\t<label for=\"search-center-longtitude\">longtitude</label>\n\t\t\t\t\t\t<input onChange={this.onLongLatChange} value={this.state._search_long} name='_search_long' id='search-center-longtitude' className='form-control'/>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<button onClick={this.onSearchCoords} type=\"button\" className='btn btn-primary search-button'>Search</button>\n\t\t\t\t\t\t<button onClick={this.onDefaultCoords} type=\"button\" className='btn btn-primary search-button'>Default</button>\n\t\t\t\t\t\n\t\t\t\t\t\t<button id=\"export-png\" class=\"btn btn-primary\" onClick={this.exportToImage}><i class=\"fa fa-download\"></i> Download PNG</button>\n    \t\t\t\t\t<a id=\"image-download\" download=\"map.png\"></a>\n\t\t\t\t\t</div>\n\t\t\t\t </div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default MapView","/home/hieu/Desktop/Hieu/Python/other_git/RoadNetDemo/client/src/config.js",[],"/home/hieu/Desktop/Hieu/Python/other_git/RoadNetDemo/client/src/map_view/countries.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":1,"column":8,"nodeType":"42","messageId":"43","endLine":1,"endColumn":12},{"ruleId":"40","severity":1,"message":"44","line":1,"column":27,"nodeType":"42","messageId":"43","endLine":1,"endColumn":33},{"ruleId":"45","severity":1,"message":"46","line":175,"column":34,"nodeType":"47","messageId":"48","endLine":175,"endColumn":35,"suggestions":"49"},{"ruleId":"50","severity":1,"message":"51","line":244,"column":10,"nodeType":"52","endLine":244,"endColumn":52},{"ruleId":"53","severity":1,"message":"54","line":244,"column":10,"nodeType":"52","endLine":244,"endColumn":52},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","no-useless-escape","Unnecessary escape character: \\(.","Literal","unnecessaryEscape",["57","58"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"messageId":"59","fix":"60","desc":"61"},{"messageId":"62","fix":"63","desc":"64"},"removeEscape",{"range":"65","text":"66"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"67","text":"68"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[4958,4959],"",[4958,4958],"\\"]